# Generated by Django 5.1.1 on 2024-10-04 11:27

import django.db.models.deletion
import django.utils.timezone
import shortuuid.django_fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CodingArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='at most 200 characters', max_length=200)),
                ('code_area', models.TextField(blank=True, null=True)),
                ('language', models.CharField(choices=[('python', 'Python'), ('javascript', 'JavaScript'), ('typescript', 'TypeScript'), ('c', 'C'), ('c++', 'C++'), ('c#', 'C#')], default='python', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('image', models.FileField(blank=True, default='default_course.jpg', null=True, upload_to='course_folder')),
                ('course_id', shortuuid.django_fields.ShortUUIDField(alphabet='ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', length=10, max_length=10, prefix='CR')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_id', shortuuid.django_fields.ShortUUIDField(alphabet='ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', length=10, max_length=10, prefix='', unique=True)),
                ('enrollment_code', models.CharField(blank=True, max_length=10, null=True)),
                ('enrollment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_enrolled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PlayGround',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='at most 200 characters', max_length=200)),
                ('playground_id', shortuuid.django_fields.ShortUUIDField(alphabet='ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', length=10, max_length=10, prefix='', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='at most 200 characters', max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('question_area', models.TextField(blank=True, null=True)),
                ('quiz_id', shortuuid.django_fields.ShortUUIDField(alphabet='ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', length=10, max_length=10, prefix='', unique=True)),
                ('use_ai_grading', models.BooleanField(default=False)),
                ('ai_grading_parameters', models.JSONField(blank=True, null=True)),
                ('instructor_solution', models.TextField(blank=True, null=True)),
                ('max_score', models.IntegerField(default=100)),
                ('show_scores', models.BooleanField(default=False)),
                ('time_limit', models.IntegerField(blank=True, help_text='Time limit for the quiz in minutes', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_type', models.CharField(choices=[('ASSESSMENT', 'Assessment'), ('QUIZ', 'Quiz')], max_length=10)),
                ('submitted_code', models.TextField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('grading_status', models.CharField(choices=[('PENDING', 'Pending'), ('GRADED', 'Graded'), ('REVALIDATION_REQUESTED', 'Revalidation Requested')], default='PENDING', max_length=25)),
                ('ai_feedback', models.TextField(blank=True, null=True)),
                ('instructor_feedback', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='at most 200 characters', max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('instructor_solution', models.TextField(blank=True, null=True)),
                ('question_area', models.TextField(blank=True, null=True)),
                ('assessment_id', shortuuid.django_fields.ShortUUIDField(alphabet='ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', length=10, max_length=10, prefix='', unique=True)),
                ('use_ai_grading', models.BooleanField(default=False)),
                ('ai_grading_parameters', models.JSONField(blank=True, null=True)),
                ('max_score', models.IntegerField(default=100)),
                ('due_date', models.DateTimeField(blank=True, help_text='Deadline for assessment submission', null=True)),
                ('coding_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assessment', to='assessments.codingarea')),
            ],
        ),
    ]
